# VIM Notes

## Sources

* [Learn Vimscript the hard way](http://learnvimscriptthehardway.stevelosh.com/), by [Steve Losh](http://stevelosh.com)

## Echoing

Use `:echo` for volatile, `:echom` for persistent messages (persistent messages can be retrieved using the `:messages` command).

## Setting options

Boolean options can be set using either the `set OPTION/noOPTION` syntax, or just toggled using `set OPTION!`. Options can also be checked by using `set OPTION?`, 
which will return a string representing the current option's state.

Example:

    set number?
    => nonumber

    set number!
    => number

## Key mapping

### Normal mode

Delete the character currently under the cursor when the key `\` is pressed:

     :map \ x

Visually select a word

    :map <space> viw

Broken apart, this consists of three commands:

1. `v` enter visual mode.
2. `i` enter insertion mode before current character.
3. `w` select the next word.

Use the `-` key to delete the current line and then pass it below the line we are on.

    :map - ddjp

Use `unmap` or  to unset normal mode key mappings.

### Modal mapping

* *nmap* Sets a key binding for normal mode only (use `nunmap` to unset).
* *imap* Sets a key binding for insert mode only (use `iunmap` to unset).
* *vnmap* Sets a key binding for visual mode only (use `xunmap` or `vunmap` to unset).

#### Example: a shortcut for deleting lines in insert mode

    imap <c-d> <esc>ddi

Note that `<esc>` is needed here, as we need to explicitly exit from insert mode in order to call `dd`. Finally, the `i` at the end of the command allows to switch back to insert mode.

### Non recursive mappings

The mapping commands above do keep into account previously set mapping. Therefore, they are prone to produce evil, recursive commands such as:

    :nmap dd O<esc>jddk

Fortunately, for each mapping command, vim provides a non-recursive variant:

* nmap => nnoremap
* vnmap => vnoremap
* imap => inoremap

**ALWAYS** use the non recursive mapping variants!

### Leaders

The VIM leader is a convenient, non assigned key used to prefix custom key bindings. The leader can be set using:

    let mapleader = "\\"

At this point, it can be used to define new mappings:

    :nnoremap <leader>d dd

Vim also provides a second leader called *Local leader*, which is meant as a prefix that takes effect only on a subset of the all possible file types:

    let maplocalleader = "`"

